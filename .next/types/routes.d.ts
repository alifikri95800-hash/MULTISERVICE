// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = never
type PageRoutes = "/" | "/_app" | "/_document" | "/blog" | "/chauffage" | "/chauffage/depannage-urgence" | "/chauffage/entretien-chaudiere" | "/chauffage/installation-chaudiere" | "/chauffage/installation-thermostat" | "/conditions-generales-vente" | "/departements/[departement]" | "/electricite" | "/electricite/depannage-urgence" | "/electricite/domotique-connectee" | "/electricite/installation-eclairage" | "/electricite/mise-aux-normes" | "/mentions-legales" | "/paris/[arrondissement]" | "/plan-du-site" | "/plomberie" | "/plomberie/debouchage-canalisations" | "/plomberie/depannage-urgence" | "/plomberie/installation-chauffe-eau" | "/plomberie/recherche-fuites" | "/politique-confidentialite"
type LayoutRoutes = never
type RedirectRoutes = "/[[...path]]"
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes


interface ParamMap {
  "/": {}
  "/_app": {}
  "/_document": {}
  "/[[...path]]": { "path"?: string[]; }
  "/blog": {}
  "/chauffage": {}
  "/chauffage/depannage-urgence": {}
  "/chauffage/entretien-chaudiere": {}
  "/chauffage/installation-chaudiere": {}
  "/chauffage/installation-thermostat": {}
  "/conditions-generales-vente": {}
  "/departements/[departement]": { "departement": string; }
  "/electricite": {}
  "/electricite/depannage-urgence": {}
  "/electricite/domotique-connectee": {}
  "/electricite/installation-eclairage": {}
  "/electricite/mise-aux-normes": {}
  "/mentions-legales": {}
  "/paris/[arrondissement]": { "arrondissement": string; }
  "/plan-du-site": {}
  "/plomberie": {}
  "/plomberie/debouchage-canalisations": {}
  "/plomberie/depannage-urgence": {}
  "/plomberie/installation-chauffe-eau": {}
  "/plomberie/recherche-fuites": {}
  "/politique-confidentialite": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }
}
